蓝桥杯辅导课
1.重点中的重点：刷题量，调试代码，按时参加模拟赛
2.模型少，思维量大，编写实际的代码要AC
3.算法题写的慢是非常正常的，正常来讲写一道算法题也要1-2个小时
常用的小trick
1.9！= 362880
2.2^10 = 1024、2^20 = 1048576(一百万) 2^25 = 3355万 2^30 = 10个亿
3.64MB大约可以开 一千六百万长度的 int 数组
4.写算法题的过程算法的时间复杂度是一个辅助解题的工具
5.h = Arrays.stream(strings).mapToInt(Integer::parseInt).toArray(); 将字符串数组变为整数数组
6.将字符串分割为字符串数组以后，可以使用循环的方式复制成int数组，保证数组从1开始

第一节：递归与递推（涉及到的就是搜索，dfs（深度优先搜索））
1.所有的递归都可以化成一个递归搜索树。当你想不清楚的时候就可以先画一个二叉树。
2.递归最重要的是顺序，一个顺序可以不重不漏地将所有方案找出来
3.递归很重要一个事情就是恢复现场，作为一个父节点必须给左右节点的选择都是一样的。
4.树 --> dfs参数 1)开一个数组记录方案 2)记录从哪个值开始枚举  3)start 当前最小可以从那个数开始枚举
ps:第二节课讲带分数的优化的解法没听懂

第二节课：递推与递归习题课
递归与递推的区别：递归把一个元问题分解成若干个同种子问题；递推：先求子问题，用子问题求原问题
题目类型：给定一个初始状态，给一些可以进行的的操作，问最少需要几步可以把初始状态转换成目标状态。
最常用的解法：BFS

1.顺序任意
2.每个格子最多摁一次
3.只要第一行的操作固定完以后，第二行的操作一定被第一行灯的亮灭状态所唯一确定
4.每一行的操作完全被上一行的状态唯一确定

第三节课：二分与前缀和
遇到一个问题问最小或者最大都可以使用二分来做

整数二分思路
1.找一个区间[L,R],使得答案一定在区间中
2.找一个判断条件，使得该判断条件具有二段性，并且答案一定是二段性的分界点
3.分析终点M在该判断条件下是否成立，如果成立，考虑在那个区间
4.如果更新方式是 R=mid，则不用做任何处理;如果是更新方式是L=mid，则需要在mid+1

实数二分思路
1.可以直接将区间正好分成[L,M] [M,R] 两部分
2.当区间长度足够小的时候就代表已经满足了条件
3. System.out.printf("%.6f%n", l); 可以决定输出几位小数


第五节课——数学知识与DP
数学部分
